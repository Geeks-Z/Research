coslr: true
criterions:
  PerformanceLoss:
    def_file: ./loss/SoftmaxLoss.py
    loss_params: {}
    optim_params: null
    weight: 1.0
endlr: 0.0
last: false
memory: {centroids: false, init_centroids: false}
model_dir: ./exp_results/imagenet/CE/
networks:
  classifier:
    def_file: ./models/DotProductClassifier.py
    optim_params: {lr: 0.1, momentum: 0.9, weight_decay: 0.0005}
    scheduler_params: {coslr: false, warmup: false, endlr: 0.0, gamma: 0.1, step_size: 3}
    params: {dataset: ImageNet_LT, feat_dim: 2048, log_dir: ./logs/ImageNet_LT/clslearn/retrain_uni2ban,
      num_classes: 1000, stage1_weights: false}
  feat_model:
    def_file: ./models/ResNext50Feature.py
    fix: true
    optim_params: {lr: 0.1, momentum: 0.9, weight_decay: 0.0005} 
    scheduler_params: {coslr: false, warmup: false, endlr: 0.0, gamma: 0.1, step_size: 3}
    params: {dataset: ImageNet_LT, dropout: null, log_dir: ./logs/ImageNet_LT/clslearn/retrain_uni2ban,
      stage1_weights: false, use_fc: false}
shuffle: true
training_opt:
  backbone: resnet50
  batch_size: 256
  dataset: ImageNet_LT
  display_step: 10
  display_grad: False
  display_grad_step: 10
  feature_dim: 2048
  log_dir: ./logs/ImageNet_LT/clslearn/retrain_uni2ban
  log_root: ./logs/ImageNet_LT
  num_classes: 1000
  num_epochs: 10
  num_workers: 12
  open_threshold: 0.1
  sampler: {def_file: ./data/ClassAwareSampler.py, num_samples_cls: 4, type: ClassAwareSampler}
  stage: retrain_uni2